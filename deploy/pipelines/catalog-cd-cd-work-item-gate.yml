name: catalog-cd-cd-work-item-gate

# trigger:
#   branches:
#     include:
#       - master
#   paths:
#     include:
#       - src/services/catalog-service/api/*

trigger: none
pr: none

variables:
  dotnetSdkVersion:  "8.x"
  buildConfiguration: Release
  releaseBranchName: master
  azSubscription: scFood
  rg: az400-dev
  appPath: src/services/catalog-service/api/
  appService: food-catalog-api-gate
  templateFile: deploy/bicep/webapp-windows.bicep

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: BuildProvision
    displayName: Build and Provision
    jobs:
      - job: Build
        steps:
          - template: templates/t-net-build.yaml
            parameters:
              cfg: $(buildConfiguration)
              folder: $(appPath)
      
      - job: Provision

        steps:
        - task: AzureCLI@2
          displayName: 'Provision AppService'
          inputs:
            azureSubscription: '$(azSubscription)'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az deployment group create \
                --resource-group $(rg) \
                --template-file $(templateFile) \
                --parameters webAppName=$(appService)             

  - stage: Gate
    jobs:
      - job: QueryWorkItem
        timeoutInMinutes: 2
        pool: server
        steps:
          - task: queryWorkItems@0
            inputs:
              queryId: 'CriticalBugs'
              maxThreshold: '0'
              minThreshold: '0'

  - stage: Deploy
    displayName: Deploy to AppService
    dependsOn: Gate

    jobs:
      - deployment: DeployAppService
        displayName: Deploy to AppService
        environment: catalog-service-gate
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@0
                  inputs:
                    buildType: "current"
                    downloadType: "single"
                    artifactName: "drop"
                    downloadPath: "$(System.ArtifactsDirectory)"

                - task: AzureRmWebAppDeployment@4
                  displayName: "Deploy: $(appService)"
                  inputs:
                    ConnectionType: "AzureRM"
                    azureSubscription: $(azSubscription)
                    appType: "webApp"
                    WebAppName: $(appService)
                    packageForLinux: "$(System.ArtifactsDirectory)/**/*.zip"                  
